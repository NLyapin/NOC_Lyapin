package main

import (
	"log"
	"openconfig-monitor/internal/config"
	"openconfig-monitor/internal/monitor"
	"os"
	"time"
)

func main() {
	log.Println("üöÄ –ó–∞–ø—É—Å–∫ OpenConfig Monitor...")

	// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
	if len(os.Args) > 1 {
		command := os.Args[1]

		switch command {
		case "add-interface":
			err := config.AddInterface("Loopback2", "iana-if-type:softwareLoopback", true)
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: %v", err)
			}
		case "set-ip":
			if len(os.Args) < 4 {
				log.Fatal("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: go run cmd/main.go set-ip <interface> <ip>")
			}
			err := config.SetIPAddress(os.Args[2], os.Args[3])
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ IP: %v", err)
			}
		case "delete-interface":
			if len(os.Args) < 3 {
				log.Fatal("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: go run cmd/main.go delete-interface <interface>")
			}
			err := config.DeleteInterface(os.Args[2])
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: %v", err)
			}
		case "add-route":
			if len(os.Args) < 4 {
				log.Fatal("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: go run cmd/main.go add-route <prefix> <nexthop>")
			}
			err := config.AddRoute(os.Args[2], os.Args[3])
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞: %v", err)
			}
		case "delete-route":
			if len(os.Args) < 3 {
				log.Fatal("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: go run cmd/main.go delete-route <prefix>")
			}
			err := config.DeleteRoute(os.Args[2])
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞: %v", err)
			}
		default:
			log.Fatal("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
		}

		return
	}

	// –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	go func() {
		for {
			err := monitor.GetConfig()
			if err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: %v", err)
			}
			time.Sleep(5 * time.Second)
		}
	}()

	select {} // –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (—á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª–∞—Å—å)
}
